
@article{terry_attitude-behaviour_2000,
	title = {Attitude-behaviour relations: {The} role of in-group norms and mode of behavioural decision-making},
	volume = {39},
	issn = {01446665},
	shorttitle = {Attitude-behaviour relations},
	url = {http://doi.wiley.com/10.1348/014466600164534},
	doi = {10.1348/014466600164534},
	language = {en},
	number = {3},
	urldate = {2022-11-22},
	journal = {British Journal of Social Psychology},
	author = {Terry, Deborah J. and Hogg, Michael A. and McKimmie, Blake M.},
	month = sep,
	year = {2000},
	keywords = {notion},
	pages = {337--361},
}

@article{lenberg_initial_2017,
	title = {An initial analysis of software engineers’ attitudes towards organizational change},
	volume = {22},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-016-9482-0},
	doi = {10.1007/s10664-016-9482-0},
	language = {en},
	number = {4},
	urldate = {2022-11-22},
	journal = {Empirical Software Engineering},
	author = {Lenberg, Per and Wallgren Tengberg, Lars Göran and Feldt, Robert},
	month = aug,
	year = {2017},
	keywords = {notion},
	pages = {2179--2205},
}

@book{lassenius_agile_2015,
	address = {Cham},
	series = {Lecture {Notes} in {Business} {Information} {Processing}},
	title = {Agile {Processes} in {Software} {Engineering} and {Extreme} {Programming}: 16th {International} {Conference}, {XP} 2015, {Helsinki}, {Finland}, {May} 25-29, 2015, {Proceedings}},
	volume = {212},
	isbn = {978-3-319-18611-5 978-3-319-18612-2},
	shorttitle = {Agile {Processes} in {Software} {Engineering} and {Extreme} {Programming}},
	url = {http://link.springer.com/10.1007/978-3-319-18612-2},
	language = {en},
	urldate = {2022-11-22},
	publisher = {Springer International Publishing},
	editor = {Lassenius, Casper and Dingsøyr, Torgeir and Paasivaara, Maria},
	year = {2015},
	doi = {10.1007/978-3-319-18612-2},
	keywords = {notion},
}

@misc{noauthor_seven_nodate,
	title = {Seven stages of action, {Types} of knowledge {\textbar} {Foundations} of {Human}-{Computer} {Interaction}},
	url = {https://foundationsofhci.wordpress.com/module-2/},
	urldate = {2022-11-20},
}

@misc{noauthor_guidelines_nodate,
	title = {{GUIDELINES} {FOR} {DESIGNING} {USER} {INTERFACE} {SOFTWARE} : {Introduction}},
	url = {https://hcibib.org/sam/index.html},
	urldate = {2022-11-20},
}

@article{nadler_beyond_1990,
	title = {Beyond {The} {Charismatic} {Leader}: {Leadership} {And} {Organizationa}},
	volume = {32},
	copyright = {Copyright University of California, Walter A. Haas School of Business Winter 1990},
	issn = {00081256},
	shorttitle = {Beyond {The} {Charismatic} {Leader}},
	url = {https://www.proquest.com/docview/215880829/abstract/B1566A6185DE47C6PQ/1},
	abstract = {In increasingly turbulent environments, executive leadership matters as never before. Organization speed, flexibility, and the need to execute discontinuous change require effective leadership skills. Charismatic leaders are important; they provide vision, direction, and energy for their firms. Charisma, however, is not enough to build competitive, agile organizations. Charismatic leadership must also be bolstered by institutional leadership through attention to details on roles, structures, and rewards. Moreover, since most organizations are too large and complex for any one executive or senior team to directly manage, responsibility for managing in turbulent environments must be institutionalized throughout the management system. The leadership of strategic organization change must be pushed throughout the company to maximize the probability that managers at all levels own and are involved in executing the change efforts and see the concrete benefits of making the change efforts work.},
	language = {English},
	number = {2},
	urldate = {2022-11-15},
	journal = {California Management Review},
	author = {Nadler, David A. and Tushman, Michael L.},
	year = {1990},
	note = {Num Pages: 21
Place: Berkeley, Berkeley},
	keywords = {Business And Economics--Management, Competitive advantage, Effectiveness, Leadership, Organizational change, Roles, Teamwork, Upper management, notion},
	pages = {77},
}

@article{rehman_psychology_2021,
	title = {The {Psychology} of {Resistance} to {Change}: {The} {Antidotal} {Effect} of {Organizational} {Justice}, {Support} and {Leader}-{Member} {Exchange}},
	volume = {12},
	issn = {1664-1078},
	shorttitle = {The {Psychology} of {Resistance} to {Change}},
	url = {https://www.frontiersin.org/articles/10.3389/fpsyg.2021.678952/full},
	doi = {10.3389/fpsyg.2021.678952},
	abstract = {In today’s business environment, the survival and sustenance of any organization depend upon its ability to introduce a successful change. However, in implementing a change, one of the biggest problems an organization faces is resistance from its employees. The current paper addresses this problem by examining the role of organizational justice dimensions in coping with the resistance to change through the intervening role of perceived organizational support (POS), leader-member exchange (LMX), and readiness for change (RFC) in a sequential framework. Data of 372 employees have been collected from the banking industry of Pakistan. The results obtained through the Partial Least Squares- Structural Equation Modeling (PLS-SEM) approach using SmartPLS suggest that distributive justice, procedural justice, and interactional justice play a critical role in lowering the resistance to change through POS, LMX, and RFC, contributing signiﬁcantly to the theory and practice. Furthermore, this study also discusses recommendations for future research and limitations associated with this research work.},
	language = {en},
	urldate = {2022-11-13},
	journal = {Frontiers in Psychology},
	author = {Rehman, Nabeel and Mahmood, Asif and Ibtasam, Muhammad and Murtaza, Shah Ali and Iqbal, Naveed and Molnár, Edina},
	month = aug,
	year = {2021},
	keywords = {notion},
	pages = {678952},
}

@article{maddila_nudge_2022,
	title = {Nudge: {Accelerating} {Overdue} {Pull} {Requests} {Towards} {Completion}},
	issn = {1049-331X, 1557-7392},
	shorttitle = {Nudge},
	url = {http://arxiv.org/abs/2011.12468},
	doi = {10.1145/3544791},
	abstract = {Pull requests are a key part of the collaborative software development and code review process today. However, pull requests can also slow down the software development process when the reviewer(s) or the author do not actively engage with the pull request. In this work, we design an end-to-end service, Nudge, for accelerating overdue pull requests towards completion by reminding the author or the reviewer(s) to engage with their overdue pull requests. First, we use models based on effort estimation and machine learning to predict the completion time for a given pull request. Second, we use activity detection to filter out pull requests that may be overdue, but for which sufficient action is taking place nonetheless. Lastly, we use actor identification to understand who the blocker of the pull request is and nudge the appropriate actor (author or reviewer(s)). The key novelty of Nudge is that it succeeds in reducing pull request resolution time, while ensuring that developers perceive the notifications sent as useful, at the scale of thousands of repositories. In a randomized trial on 147 repositories in use at Microsoft, Nudge was able to reduce pull request resolution time by 60\% for 8,500 pull requests, when compared to overdue pull requests for which Nudge did not send a notification. Furthermore, developers receiving Nudge notifications resolved 73\% of these notifications as positive. We observed similar results when scaling up the deployment of Nudge to 8,000 repositories at Microsoft, for which Nudge sent 210,000 notifications during a full year. This demonstrates Nudge's ability to scale to thousands of repositories. Lastly, our qualitative analysis of a selection of Nudge notifications indicates areas for future research, such as taking dependencies among pull requests and developer availability into account.},
	urldate = {2022-10-24},
	journal = {ACM Transactions on Software Engineering and Methodology},
	author = {Maddila, Chandra and Upadrasta, Sai Surya and Bansal, Chetan and Nagappan, Nachiappan and Gousios, Georgios and van Deursen, Arie},
	month = jun,
	year = {2022},
	note = {arXiv:2011.12468 [cs]},
	keywords = {Computer Science - Artificial Intelligence, Computer Science - Machine Learning, Computer Science - Programming Languages, Computer Science - Software Engineering, notion},
	pages = {3544791},
}

@article{hulkko_multiple_nodate,
	title = {A {Multiple} {Case} {Study} on the {Impact} of {Pair} {Programming} on {Product} {Quality}},
	abstract = {Pair programming is a programming technique in which two programmers use one computer to work together on the same task. There is an ongoing debate over the value of pair programming in software development. The current body of knowledge in this area is scattered and unorganized. Review shows that most of the results have been obtained from experimental studies in university settings. Few, if any, empirical studies exist, where pair programming has been systematically under scrutiny in real software development projects. Thus, its proposed benefits remain currently without solid empirical evidence. This paper reports results from four software development projects where the impact of pair programming on software product quality was studied. Our empirical findings appear to offer contrasting results regarding some of the claimed benefits of pair programming. They indicate that pair programming may not necessarily provide as extensive quality benefits as suggested in literature, and on the other hand, does not result in consistently superior productivity when compared to solo programming.},
	language = {en},
	author = {Hulkko, Hanna and Abrahamsson, Pekka},
	keywords = {notion},
	pages = {10},
}

@article{royce_managing_nodate,
	title = {{MANAGING} {THE} {DEVELOPMENT} {OF} {LARGE} {SOFTWARE} {SYSTEMS}},
	language = {en},
	author = {Royce, Dr Winston W},
	keywords = {notion},
	pages = {11},
}

@book{westby_git_2015,
	address = {Sebastopol, CA},
	edition = {First edition},
	title = {Git for teams},
	isbn = {978-1-4919-1118-1},
	language = {en},
	publisher = {O'Reilly Media, Inc},
	author = {Westby, Emma Jane Hogbin},
	year = {2015},
	note = {OCLC: ocn921827412},
	keywords = {Application software, Computer software, Development, Distributed processing, Electronic data processing, Git (Computer file), Management, Teams in the workplace, notion},
}

@misc{noauthor_platform_nodate,
	title = {The platform to sell and rent anything, anywhere {\textbar} {Rentle}},
	url = {https://www.rentle.io/},
	urldate = {2022-10-13},
}

@misc{noauthor_github_nodate,
	title = {{GitHub} - {City}-of-{Helsinki}/respa: {Resource} reservation and management app and {API}},
	url = {https://github.com/City-of-Helsinki/respa},
	urldate = {2022-10-13},
}

@misc{noauthor_vaha_nodate,
	title = {{VaHa} download {\textbar} {SourceForge}.net},
	url = {https://sourceforge.net/projects/vaha/},
	urldate = {2022-10-02},
}

@misc{noauthor_leirivalinelainaamo_nodate,
	title = {Leirivälinelainaamo {\textbar} {Espoon} kaupunki},
	url = {https://www.espoo.fi/fi/toimipisteet/20043},
	urldate = {2022-10-02},
}

@misc{noauthor_startup_nodate,
	title = {Startup {Jobs} at {YC} {Companies} in {Engineering}, {Product}, {Design}, {Remote} and more},
	url = {https://www.workatastartup.com/},
	abstract = {Find startup jobs at the best YC startups and connect with founders on Y Combinator's Work at a Startup.},
	language = {en},
	urldate = {2022-09-27},
	journal = {Y Combinator's Work at a Startup},
}

@book{derby_agile_2006,
	address = {Raleigh, NC},
	title = {Agile retrospectives: making good teams great},
	isbn = {978-0-9776166-4-0},
	shorttitle = {Agile retrospectives},
	publisher = {Pragmatic Bookshelf},
	author = {Derby, Esther and Larsen, Diana},
	year = {2006},
	note = {OCLC: ocm71756468},
	keywords = {Computer software, Development, Project management, Teams in the workplace},
}

@article{solansky_leadership_2008,
	title = {Leadership {Style} and {Team} {Processes} in {Self}-{Managed} {Teams}},
	volume = {14},
	issn = {1548-0518},
	url = {https://doi.org/10.1177/1548051808315549},
	doi = {10.1177/1548051808315549},
	abstract = {Team leadership merits continued attention because leaders have an impact on how the team develops and performs. In this article, team processes are explored within self-managed teams that develop different leadership styles. In particular, two leadership styles are compared: shared leadership and single leadership. The results of the study suggest that teams with shared leadership have motivational and cognitive advantages over teams that took the traditional approach of relying on a single leader. The article concludes with a discussion of the results, implications, and future research opportunities.},
	number = {4},
	urldate = {2022-09-14},
	journal = {Journal of Leadership \& Organizational Studies},
	author = {Solansky, Stephanie T.},
	month = may,
	year = {2008},
	note = {Publisher: SAGE Publications Inc},
	keywords = {notion},
	pages = {332--341},
}

@article{mcintosh_empirical_2016,
	title = {An empirical study of the impact of modern code review practices on software quality},
	volume = {21},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-015-9381-9},
	doi = {10.1007/s10664-015-9381-9},
	language = {en},
	number = {5},
	urldate = {2022-09-13},
	journal = {Empirical Software Engineering},
	author = {McIntosh, Shane and Kamei, Yasutaka and Adams, Bram and Hassan, Ahmed E.},
	month = oct,
	year = {2016},
	keywords = {notion},
	pages = {2146--2189},
}

@inproceedings{bosu_characteristics_2015,
	address = {Florence, Italy},
	title = {Characteristics of {Useful} {Code} {Reviews}: {An} {Empirical} {Study} at {Microsoft}},
	isbn = {978-0-7695-5594-2},
	shorttitle = {Characteristics of {Useful} {Code} {Reviews}},
	url = {http://ieeexplore.ieee.org/document/7180075/},
	doi = {10.1109/MSR.2015.21},
	abstract = {Over the past decade, both open source and commercial software projects have adopted contemporary peer code review practices as a quality control mechanism. Prior research has shown that developers spend a large amount of time and effort performing code reviews. Therefore, identifying factors that lead to useful code reviews can beneﬁt projects by increasing code review effectiveness and quality. In a three-stage mixed research study, we qualitatively investigated what aspects of code reviews make them useful to developers, used our ﬁndings to build and verify a classiﬁcation model that can distinguish between useful and not useful code review feedback, and ﬁnally we used this classiﬁer to classify review comments enabling us to empirically investigate factors that lead to more effective code review feedback.},
	language = {en},
	urldate = {2022-09-13},
	booktitle = {2015 {IEEE}/{ACM} 12th {Working} {Conference} on {Mining} {Software} {Repositories}},
	publisher = {IEEE},
	author = {Bosu, Amiangshu and Greiler, Michaela and Bird, Christian},
	month = may,
	year = {2015},
	keywords = {notion},
	pages = {146--156},
}

@misc{swarmia_reducing_nodate,
	title = {Reducing pull request cycle time},
	copyright = {Swarmia},
	url = {https://help.swarmia.com/pull-request-cycle-time-in-swarmia},
	urldate = {2022-08-24},
	journal = {Reducing pull request cycle time},
	author = {{Swarmia}},
	note = {Accessed: 24.8.2022},
}

@techreport{noauthor_state_2021,
	title = {State of {DevOps} {Report} 2021},
	url = {https://services.google.com/fh/files/misc/state-of-devops-2021.pdf},
	urldate = {2022-06-13},
	year = {2021},
	keywords = {notion},
}

@article{gallardo_clustering_2021,
	title = {Clustering {Algorithm}-{Based} {Network} {Planning} for {Advanced} {Metering} {Infrastructure} in {Smart} {Grid}},
	volume = {9},
	issn = {2169-3536},
	doi = {10.1109/ACCESS.2021.3068752},
	abstract = {Nowadays, legacy electrical distribution systems are migrating to a new modern electric grid with the capability of supporting different applications such as advanced metering infrastructure (AMI), distributed energy resources, and electric vehicles. Among these applications, AMI is playing an important role in delivering data from customers to power utilities, supporting reliable real-time monitoring, and remote operation of power quality data and voltage profile. The AMI consists of smart meters, data aggregation points (DAPs), the utility control center, and communication networks. Appropriate network planning plays an essential role in facilitating the exchange of data between consumers and power utilities as well as accommodating new smart grid applications and future growth. This work proposes an optimal placement of DAPs for AMI based on machine learning clustering techniques in residential grids. Network partitioning is introduced to create sub-networks and graph algorithms generate a deployment topology given optimization constraints. A new measurement metric called coverage density is considered to indicate neighborhood area networks (NAN) zones with the appropriate coverage. Three real scenarios of NAN are considered: urban, suburban, and rural. The proposed algorithm is evaluated and compared with conventional heuristic optimization methods with respect to average and maximum distance between smart meters and DAPs, coverage density, and execution time.},
	journal = {IEEE Access},
	author = {Gallardo, José Luis and Ahmed, Mohamed A. and Jara, Nicolás},
	year = {2021},
	note = {Conference Name: IEEE Access},
	keywords = {Advanced metering infrastructure (AMI), Clustering algorithms, DAP placement, Data aggregation, Planning, Smart grids, Smart meters, Wide area networks, Wireless fidelity, neighborhood area networks, network planning, smart meters},
	pages = {48992--49006},
}

@article{katzenbach_discipline_1993,
	title = {The {Discipline} of {Teams}},
	url = {https://www.ucipfg.com/Repositorio/GSPM/Cursos/PFC_GSPM_03/Lectura%202.pdf},
	urldate = {2022-08-16},
	journal = {Harvard Business Review},
	author = {Katzenbach, Jon and Smith, Douglas},
	month = apr,
	year = {1993},
}

@article{moe_teamwork_2010,
	title = {A teamwork model for understanding an agile team: {A} case study of a {Scrum} project},
	volume = {52},
	issn = {09505849},
	shorttitle = {A teamwork model for understanding an agile team},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0950584909002043},
	doi = {10.1016/j.infsof.2009.11.004},
	abstract = {Objective: Most current development methods argue that teams should self-manage. Our objective is thus to provide a better understanding of the nature of self-managing agile teams, and the teamwork challenges that arise when introducing such teams.
Method: We conducted extensive ﬁeldwork for 9 months in a software development company that introduced Scrum. We focused on the human sensemaking, on how mechanisms of teamwork were understood by the people involved.
Results: We describe a project through Dickinson and McIntyre’s teamwork model, focusing on the interrelations between essential teamwork components. Problems with team orientation, team leadership and coordination in addition to highly specialized skills and corresponding division of work were important barriers for achieving team effectiveness.
Conclusion: Transitioning from individual work to self-managing teams requires a reorientation not only by developers but also by management. This transition takes time and resources, but should not be neglected. In addition to Dickinson and McIntyre’s teamwork components, we found trust and shared mental models to be of fundamental importance.},
	language = {en},
	number = {5},
	urldate = {2022-08-16},
	journal = {Information and Software Technology},
	author = {Moe, Nils Brede and Dingsøyr, Torgeir and Dybå, Tore},
	month = may,
	year = {2010},
	pages = {480--491},
}

@misc{holub_kpis_2018,
	title = {{KPIs}, {Velocity}, and {Other} {Destructive} {Metrics}},
	url = {https://holub.com/kpis-velocity-and-other-destructive-metrics/},
	abstract = {'It is wrong to suppose that if you can’t measure it, you can’t manage it—a costly myth.' –W. Edwards Deming The Deming quote at the top of this post is often twisted into something worthy of Frederick Taylor: 'if you can't measure it, you can't manage it.' Deming would disagree. You can—in fact, must—manage things you can't measure, because in software, there are virtually no measurements that have any value. Wasting time collecting measurements that don't lead to improvement is not only costly, it's actively destructive. KPI (Key Performance Indicator) metrics and Agile just don't mix. They are the software},
	language = {en-US},
	urldate = {2022-08-15},
	journal = {Allen Holub},
	author = {Holub, Allen},
	month = jan,
	year = {2018},
	note = {Section: Agility},
	keywords = {Blog, notion},
}

@article{eaidgah_visual_2016,
	title = {Visual management, performance management and continuous improvement: {A} lean manufacturing approach},
	volume = {7},
	issn = {2040-4166},
	shorttitle = {Visual management, performance management and continuous improvement},
	url = {https://www.emerald.com/insight/content/doi/10.1108/IJLSS-09-2014-0028/full/html},
	doi = {10.1108/IJLSS-09-2014-0028},
	abstract = {Purpose – The purpose of the paper is to study the interconnections between visual management, performance management and continuous improvement programmes and to suggest a practical framework to establish an effective visual management programme in association with performance management and continuous improvement systems. For the sake of simplicity, this paper refers to such a programme as integrated visual management (IVM) throughout this paper.},
	language = {en},
	number = {2},
	urldate = {2022-08-04},
	journal = {International Journal of Lean Six Sigma},
	author = {Eaidgah, Youness and Maki, Alireza Arab and Kurczewski, Kylie and Abdekhodaee, Amir},
	month = jun,
	year = {2016},
	keywords = {notion},
	pages = {187--210},
}

@inproceedings{wickert_benefit_2010,
	title = {Benefit of a simulation model of a decentralized energy management system for electric vehicle charging},
	doi = {10.1109/EMOBILITY.2010.5668050},
	abstract = {In times of ever increasing power feed-in from fluctuating renewable power sources like wind and solar power it increases the need for more storage capacity to compensate such fluctuations. Electric vehicles (EVs) are often described as a possible way to provide this storage capacity. To make the storage of EVs available in a reasonable manner an energy management system is needed. In our research projects RegModHarz and Harz.EE-mobility it is analysed how EVs can support higher renewable energy integration for the rural region Harz. This model region is also subject of the presented work. In this paper an agent based simulation model for EVs is presented to show the impact of managed EV charging. The model has three main focuses. At first the model must reproduce reasonable user behaviour like driving characteristics. The second focus is to model the electrical characteristics of the EV. In last focus is the simulation of a decentralized EV energy management.We present a modular and extendable simulation framework with which we are able to model a precise simulation of a great amount of EVs for the region Harz. With a detailed EV simulation model we are able to display that EVs will produce seasonal dependent energy consumption. We show that a decentralized load management of these EVs reduces residual load fluctuations and therefore helps to increase the integration of renewable energy into the grid.},
	booktitle = {2010 {Emobility} - {Electrical} {Power} {Train}},
	author = {Wickert, Manuel and Baier, André and Lichtner, Patrick and Prior, Johannes},
	month = nov,
	year = {2010},
	keywords = {Atmospheric modeling, Batteries, Biological system modeling, Driver circuits, Energy consumption, Load modeling, Mathematical model, agent based simulation, decentralized energy management, electrical vehicle simulation, heat simulation, load management},
	pages = {1--7},
}

@article{yang_comprehensive_2021,
	title = {A comprehensive review on electric vehicles integrated in virtual power plants},
	volume = {48},
	issn = {22131388},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S2213138821006925},
	doi = {10.1016/j.seta.2021.101678},
	abstract = {A virtual power plant is a system that integrates different types of distributed energy resources to achieve the rational and optimized allocation and utilization of resources. As energy consumers and providers, electric ve­ hicles (EVs) play a crucial role in the operation and scheduling of virtual power plants (VPPs). In this review, the integration of EVs and electric vehicles is systematically summarized, focusing specifically on different types of EVs and the combination of various distributed energy sources. The uncertainties and constraints associated with the use of EVs in VPPs are systematically summarized, and the scheduling methods for the optimization of VPPs with EVs are analyzed and compared. Finally, the real cases and the future trend of EVs integrated in VPP are studied and analyzed. This review provides references for research on the integration of EVs into VPPs.},
	language = {en},
	urldate = {2022-08-02},
	journal = {Sustainable Energy Technologies and Assessments},
	author = {Yang, Xiyun and Zhang, Yanfeng},
	month = dec,
	year = {2021},
	pages = {101678},
}

@article{tangen_demystifying_2005,
	title = {Demystifying productivity and performance},
	volume = {54},
	issn = {1741-0401},
	url = {https://www.emerald.com/insight/content/doi/10.1108/17410400510571437/full/html},
	doi = {10.1108/17410400510571437},
	abstract = {Purpose – Examines the ways in which the concepts of “productivity” and “performance” are dealt with in the literature, demonstrating that terms used within these ﬁelds are often vaguely deﬁned and poorly understood.},
	language = {en},
	number = {1},
	urldate = {2022-08-02},
	journal = {International Journal of Productivity and Performance Management},
	author = {Tangen, Stefan},
	month = jan,
	year = {2005},
	pages = {34--46},
}

@article{symons_software_2010,
	title = {Software {Industry} {Performance}: {What} {You} {Measure} {Is} {What} {You} {Get}},
	volume = {27},
	issn = {0740-7459},
	shorttitle = {Software {Industry} {Performance}},
	url = {http://ieeexplore.ieee.org/document/5235133/},
	doi = {10.1109/MS.2009.162},
	language = {en},
	number = {6},
	urldate = {2022-08-01},
	journal = {IEEE Software},
	author = {Symons, Charles},
	month = nov,
	year = {2010},
	keywords = {notion},
	pages = {66--72},
}

@misc{noauthor_10359pdf_nodate,
	title = {10359.pdf},
	url = {https://sol.sbc.org.br/index.php/ctd/article/download/10492/10359},
	urldate = {2022-06-14},
	keywords = {notion},
}

@article{forsgren_space_2021,
	title = {The {SPACE} of {Developer} {Productivity}},
	language = {en},
	author = {Forsgren, Nicole and Storey, Margaret-Anne and Maddila, Chandra and Zimmermann, Thomas and Houck, Brian and Butler, Jenna},
	month = feb,
	year = {2021},
	keywords = {notion},
	pages = {29},
}

@article{chew_no-nonsense_1988,
	title = {No-{Nonsense} {Guide} to {Measuring} {Productivity}},
	volume = {66},
	issn = {0017-8012},
	number = {1},
	journal = {Harvard Business Review},
	author = {Chew, W.Bruce},
	month = jan,
	year = {1988},
	keywords = {notion},
}

@article{syverson_what_2011,
	title = {What {Determines} {Productivity}?},
	volume = {49},
	issn = {0022-0515},
	url = {https://pubs.aeaweb.org/doi/10.1257/jel.49.2.326},
	doi = {10.1257/jel.49.2.326},
	abstract = {Economists have shown that large and persistent differences in productivity levels across businesses are ubiquitous. This finding has shaped research agendas in a number of fields, including (but not limited to) macroeconomics, industrial organization, labor, and trade. This paper surveys and evaluates recent empirical work addressing the question of why businesses differ in their measured productivity levels. The causes are manifold, and differ depending on the particular setting. They include elements sourced in production practices—and therefore over which producers have some direct control, at least in theory—as well as from producers' external operating environments. After evaluating the current state of knowledge, I lay out what I see are the major questions that research in the area should address going forward. (JEL D24, G31, L11, M10, O30, O47)},
	language = {en},
	number = {2},
	urldate = {2022-07-29},
	journal = {Journal of Economic Literature},
	author = {Syverson, Chad},
	month = jun,
	year = {2011},
	keywords = {notion},
	pages = {326--365},
}

@article{humble_why_2011,
	title = {Why {Enterprises} {Must} {Adopt} {Devops} to {Enable} {Continuous} {Delivery}},
	volume = {24},
	language = {en},
	number = {8},
	author = {Humble, Jez and Molesky, Joanne},
	year = {2011},
	keywords = {notion},
	pages = {7},
}

@article{hinkka_datahubin_nodate,
	title = {Datahubin tarjoamat hyödyt ja rooli sähkömarkkinoiden muu- toksessa},
	abstract = {The goal of this thesis is to identify the benefits and role of the Finnish datahub in the upcoming turns of the electricity market. The datahub’s dependencies to other ongoing market changes are evaluated. The research is conducted as a literature review complemented with specialist interviews. The research method is qualitative. Datahub is a centralized data exchange platform in Finnish retail electricity markets and its services are defined by the electricity market act. Datahub ensures uniform practices in data exchange and standardized processes between market participants. The chain of events that led to the implementation of datahub is clarified in this thesis. Datahub is not directly based on EU legislation but is Finland’s national project to enable a high-quality retail electricity market. However, the datahub helps to meet certain EU objectives. Datahub is linked to several market changes. An overview of the most important market changes from the perspective of the datahub is included in this thesis. One of the results of this thesis is the classification of technical and logical dependencies between datahub and market changes. An estimate of the type of dependency is also presented. Datahub forwards and stores time step information during the transition to 15 min metering period and manages time-series reported in different time steps during the phased commissioning of 15 min imbalance settlement period and thus has a significant role in both. Single price and single position model has little effect on the datahub or its balance settlement. Datahub must be commissioned before the next major measures to harmonize the Nordic retail electricity market, such as datahub interoperability. The first version of datahub does not have very significant functionalities in terms of demand response, but the datahub still has the opportunity to develop into a key platform. Datahub has the necessary information and a role in the imbalance settlement. It has already been suggested that datahub would offer its features for the needs of a load control interface and later for a flexibility hub. Ideas for further development of the datahub are presented. Bringing demand response products to the datahub would help to implement a comparison service for flexibility service providers. If the reporting interval of the metering data is shortened, it could allow imbalance calculation to be performed more frequently, which in turn would provide a better situation picture of the imbalance of a market participant. The data stored in the datahub is sensitive. The information can only be disclosed as anonymized for research purposes, but there is no policy or guidance for this at the time of writing. However, customers may choose to authorize a third party who can analyze or pass on the metering point- or metering data as agreed with the customer.},
	language = {fi},
	author = {Hinkka, Atte},
	pages = {69},
}

@article{noauthor_alyverkkotyoryhman_nodate,
	title = {Älyverkkotyöryhmän ehdotukset ja niiden tarkemmat perustelut},
	language = {fi},
	pages = {81},
}

@article{hintsala_sahkon_nodate,
	title = {Sähkön kysyntäjouston hyödyntämi- nen asuntotuotannossa},
	language = {fi},
	author = {Hintsala, Benjamin},
	pages = {34},
}

@article{jarventausta_kysynnan_nodate,
	title = {Kysynnän jousto – {Suomeen} soveltuvat käytännön ratkaisut ja vaikutukset verkkoyhtiöille ({DR} pooli) -},
	language = {fi},
	author = {Järventausta, Pertti and Repo, Sami and Trygg, Petri and Rautiainen, Antti and Mutanen, Antti and Lummi, Kimmo and Supponen, Antti and Heljo, Juhani and Sorri, Jaakko and Harsia, Pirkko and Honkiniemi, Martti and Kallioharju, Kari and Piikkilä, Veijo and Luoma, Jaakko and Partanen, Jarmo and Honkapuro, Samuli and Valtonen, Petri and Tuunanen, Jussi and Belonogova, Nadezda},
	pages = {362},
}

@inproceedings{cois_modern_2014,
	title = {Modern {DevOps}: {Optimizing} software development through effective system interactions},
	shorttitle = {Modern {DevOps}},
	doi = {10.1109/IPCC.2014.7020388},
	abstract = {Software development processes are fundamentally based on efficient and effective communication. Communication between engineers, between engineers and managers, and between teams and clients are all essential components of a successful project. Requirements must be effectively transferred from client to engineer, specifications must be transitioned from architect to engineer, and constant communication between project team members, managers, and clients throughout the project life cycle is critical to the success of projects of any complexity. To succeed in a world where technologies, requirements, ideas, tools, and timelines are constantly changing, information must be accurate, readily available, easily found, and ideally delivered constantly, in real-time, to all team members. To meet these challenges, modern software development has evolved to encompass key concepts of adaptability to change and data-driven project management. A recent movement dubbed DevOps has attempted to use automated systems to bridge the information gap between project team entities and to enforce rigorous processes to ensure real-time communications. In this paper, the authors frame this challenge as a communications problem that can be addressed by the introduction of specifically designed autonomous system actors and processes. Successful implementation of such a methodology will enable efficient, effective, and immediate data collection, synthesis, and transfer of information between all requisite entities within the software project. A generalized model of DevOps will be presented and analyzed, offering a formalization of the communications and actors requisite to any effective software development process. These concepts will be further developed to illustrate the information flow between human and system actors, and explore how this model can be used to optimize the processes of a software development team to maximize productivity and quality of work products.},
	booktitle = {2014 {IEEE} {International} {Professional} {Communication} {Conference} ({IPCC})},
	author = {Cois, Constantine Aaron and Yankel, Joseph and Connell, Anne},
	month = oct,
	year = {2014},
	note = {ISSN: 2158-1002},
	keywords = {Context, DevOps, Process improvement, Productivity, Project management, Real-time systems, Software, Software development, Software engineering, Testing, notion},
	pages = {1--7},
}

@article{hemon-hildgen_agile_2020,
	title = {From {Agile} to {DevOps}: {Smart} {Skills} and {Collaborations}},
	volume = {22},
	shorttitle = {From {Agile} to {DevOps}},
	doi = {10.1007/s10796-019-09905-1},
	abstract = {Although agile software development approaches have become increasingly prevalent, many organizations, have found they were not able to achieve a more frequent release cadence, largely due to different departmental functions operating in silos. In an effort to remove these silos, companies have moved towards DevOps. As digitalization continues, companies increasingly implement DevOps. We suggest three different stages in the agile to DevOps transition: agile, continuous integration, and continuous delivery. Based on an in-depth case study in an organization with several years’ experience in DevOps, we identify a fundamental disruption in the soft skills that software teams are expected to possess, and in the patterns of collaboration among teams. Arguably, smartness may be characterized as being flexible, teaming up with people who have a different profile, belonging to a different function, and achieving a quicker delivery schedule. In light of this, we argue that DevOps leads to greater smartness for the Information Systems function.},
	journal = {Information Systems Frontiers},
	author = {Hemon-Hildgen, Aymeric and Lyonnet, Barbara and Rowe, Frantz and Fitzgerald, Brian},
	month = aug,
	year = {2020},
	keywords = {notion},
}

@incollection{cohen_introduction_2004,
	title = {An {Introduction} to {Agile} {Methods}},
	volume = {62},
	isbn = {978-0-12-012162-5},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0065245803620012},
	language = {en},
	urldate = {2022-07-06},
	booktitle = {Advances in {Computers}},
	publisher = {Elsevier},
	author = {Cohen, David and Lindvall, Mikael and Costa, Patricia},
	year = {2004},
	doi = {10.1016/S0065-2458(03)62001-2},
	keywords = {notion},
	pages = {1--66},
}

@article{oliveira_code_2020,
	title = {Code and commit metrics of developer productivity: a study on team leaders perceptions},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Code and commit metrics of developer productivity},
	url = {https://link.springer.com/10.1007/s10664-020-09820-z},
	doi = {10.1007/s10664-020-09820-z},
	language = {en},
	number = {4},
	urldate = {2022-07-05},
	journal = {Empirical Software Engineering},
	author = {Oliveira, Edson and Fernandes, Eduardo and Steinmacher, Igor and Cristo, Marco and Conte, Tayana and Garcia, Alessandro},
	month = jul,
	year = {2020},
	pages = {2519--2549},
}

@article{fowler_agile_nodate,
	title = {The {Agile} {Manifesto}},
	language = {en},
	author = {Fowler, Martin and Highsmith, Jim},
	keywords = {notion},
	pages = {7},
}

@article{alshamrani_comparison_2015,
	title = {A {Comparison} {Between} {Three} {SDLC} {Models} {Waterfall} {Model}, {Spiral} {Model}, and {Incremental}/{Iterative} {Model}},
	volume = {12},
	abstract = {The computer has become indispensable in today’s life, and it is widely used in many fields of life such as commerce, education, industry…etc. The computer saves time in regarding to help solving complex, long, repeated processes in a short time and high speed. As the software programs need to handle these features, many companies produce software programs to facilitate the works for administrations, banks, offices, etc. Moreover, software has been in used for analyzing information or solving problems for more than four decades. Creating a suitable work to develop programs of high quality is the main goal of the software engineering. Usually, clients seek the assistance from computer and software engineers to solve and handle their problems. There are various models have been widely in used to develop software products. Common models will be described in this paper.},
	language = {en},
	number = {1},
	journal = {International Journal of Computer Science Issues},
	author = {Alshamrani, Adel and Bahattab, Abdullah},
	year = {2015},
	keywords = {notion},
	pages = {7},
}

@article{balaji_waterfall_2012,
	title = {Waterfall vs {V}-model vs {Agile}: {A} comparative study on {SDLC}},
	abstract = {Organizations that are developing software solution are faced with the difficult choice of picking the right software development life cycle (SDLC). The waterfall model is a sequential design process, often used in software development processes, in which progress is seen as flowing steadily downwards (like a waterfall) through the phases. The V-model represents a software development process which may be considered an extension of the waterfall model. Instead of moving down in a linear way, the process steps are bent upwards after the coding phase, to form the typical V shape Agile Modeling is a practice-based methodology for modelling and documentation of software-based systems. It is intended to be a collection of values, principles, and practices for modelling software that can be applied on a software development project in a more flexible manner than traditional Modelling methods. This comparative summarizes the steps an organization would have to go through in order to make the best possible choice.},
	language = {en},
	number = {1},
	journal = {. Vol.},
	author = {Balaji, S},
	year = {2012},
	keywords = {notion},
	pages = {5},
}

@article{boehm_software_1979,
	title = {Software engineering - as it is},
	abstract = {AND ABSTRACT This paper presents a view of software engineering as it is in 1979. It discusses current software engineering practice with respect to lessons learned in the past few years, and concludes that the lessons are currently not heeded roughly half of the time. The paper discusses some of the factors which may account for this lag, including rapid technological change, education shortfalls, technology transfer inhibitions, resistance to disciplined methods, inappropriate role models, and a restricted view of software engineering.},
	language = {en},
	author = {Boehm, Barry W and Beach, Redondo},
	year = {1979},
	keywords = {notion},
	pages = {11},
}

@book{noauthor_ieee_1990,
	title = {{IEEE} {Std} 610.12-1990},
	isbn = {978-0-7381-0391-4},
	language = {English},
	publisher = {IEEE},
	year = {1990},
	note = {OCLC: 1322558124},
	keywords = {notion},
}

@article{noauthor_ieee_1990-1,
	title = {{IEEE} {Standard} {Glossary} of {Software} {Engineering} {Terminology}},
	doi = {10.1109/IEEESTD.1990.101064},
	abstract = {This IEEE Standards product is part of the family on Software Engineering. This standard identifies terms currently in use in the field of Software Engineering. Standard definitions for those terms are established.},
	journal = {IEEE Std 610.12-1990},
	month = dec,
	year = {1990},
	keywords = {Definitions, Software engineering, Standards, Terminology, dictionary, glossary, terminology},
	pages = {1--84},
}

@article{mcclure_nato_1968,
	title = {{NATO} {SOFTWARE} {ENGINEERING} {CONFERENCE} 1968},
	language = {en},
	author = {McClure, Robert M},
	year = {1968},
	keywords = {notion},
	pages = {136},
}

@inproceedings{bourque_guide_2002,
	title = {Guide to the {Software} {Engineering} {Body} of {Knowledge} ({SWEBOK}) and the {Software} {Engineering} {Education} {Knowledge} ({SEEK}) - a preliminary mapping},
	doi = {10.1109/STEP.2002.1267595},
	abstract = {This paper is the result of a workshop held in Montreal in October 2002 during the Software Technology and Practice Conference (STEP 2002). The purpose of the paper is to present a preliminary mapping of two related but distinct software engineering body of knowledge initiatives, and also a list of proposals to improve them: the guide to the Software Engineering Body of Knowledge (SWEBOK) and the Software Engineering Education [body of] Knowledge (SEEK). The SWEBOK guide is aimed at identifying and describing the body of knowledge of a software engineering professional who has an undergraduate degree and four years of experience. The intended audiences of the SWEBOK Guide include industry, academia and policy-making organizations. The SEEK is aimed at delimiting the knowledge that professionals teaching software engineering agree is necessary for anyone to obtain an undergraduate degree in this field. The mapping shows that, though there are no major "school of thought" divergences between the two bodies of knowledge, there are a number of differences in the details of each breakdown in terms of vocabulary, level of detail, decomposition approach and topics encompassed.},
	booktitle = {10th {International} {Workshop} on {Software} {Technology} and {Engineering} {Practice}},
	author = {Bourque, P. and Robert, F. and Lavoie, J.M. and Lee, A. and Trudel, S. and Lethbridge, T.C.},
	month = oct,
	year = {2002},
	keywords = {Conferences, Educational technology, Knowledge engineering, Software engineering, notion},
	pages = {8--23},
}

@book{sommerville_software_2016,
	address = {Boston Munich},
	edition = {10. ed., global ed},
	series = {Always learning},
	title = {Software engineering},
	isbn = {978-1-292-09613-1},
	abstract = {The Fundamental Practice of Software Engineering. Software Engineering introduces readers to the overwhelmingly important subject of software programming and development. In the past few years, computer systems have come to dominate not just our technological growth, but the foundations of our world’s major industries. This text seeks to lay out the fundamental concepts of this huge and continually growing subject area in a clear and comprehensive manner. The Tenth Edition contains new information that highlights various technological updates of recent years, providing readers with highly relevant and current information. Sommerville’s experience in system dependability and systems engineering guides the text through a traditional plan-based approach that incorporates some novel agile methods. The text strives to teach the innovators of tomorrow how to create software that will make our world a better, safer, and more advanced place to live},
	language = {en},
	publisher = {Pearson},
	author = {Sommerville, Ian},
	year = {2016},
	keywords = {notion},
}

@article{teh_social_2012,
	title = {Social {Psychology} and {Software} {Teams}: {Establishing} {Task}-{Effective} {Group} {Norms}},
	volume = {29},
	issn = {1937-4194},
	shorttitle = {Social {Psychology} and {Software} {Teams}},
	doi = {10.1109/MS.2011.157},
	abstract = {It's a common belief that groups that possess appropriate expertise and work well together will be more likely to successfully complete a project. However, social psychological research shows that getting the right mix of people doesn't guarantee a successful outcome. Group success also relies on group norms, which are derived as much from the group's context as from the people in it. A small, preliminary study illustrates how norm manipulation affected how well groups performed requirements elicitation. Results show that groups performed better on this task when norms emphasized creativity rather than agreeability. Norm manipulation might be a practical way to enhance group performance in software engineering tasks. There is an erratum in this article: in Figure 1, the description in the “Constructive norm condition” box should have read “Priming: list what they had learned in their requirements-analysis course.” The description in the “Critical norm condition” box should have read “Priming: debate and reach consensus on the statement‘Requirements specifications should always reflect design constraints.’”},
	number = {4},
	journal = {IEEE Software},
	author = {Teh, Alvin and Baniassad, Elisa and van Rooy, Dirk and Boughton, Clive},
	month = jul,
	year = {2012},
	note = {Conference Name: IEEE Software},
	keywords = {Collaboration, Design methodology, Memory management, Psychology, Sociology, Software engineering, Teamwork, group norms, notion, sociology, software engineering, teamwork},
	pages = {53--58},
}

@article{srivastava_developer_2020,
	title = {Developer {Velocity}: {How} software excellence fuels business performance},
	language = {en},
	author = {Srivastava, Shivam and Trehan, Kartik and Wagle, Dilip and Wang, Jane},
	month = apr,
	year = {2020},
	keywords = {notion},
	pages = {11},
}

@article{duhigg_what_2016,
	title = {What {Google} {Learned} {From} {Its} {Quest} to {Build} the {Perfect} {Team}},
	language = {en},
	journal = {The New York Times},
	author = {Duhigg, Charles},
	month = feb,
	year = {2016},
	keywords = {notion},
	pages = {9},
}

@misc{koponen_essential_2021,
	title = {The essential guide to agile team working agreements},
	url = {https://www.swarmia.com/blog/agile-team-working-agreements/},
	abstract = {Learn everything you need to get started with working agreements: the what, the why, best practices, and example templates.},
	language = {en},
	urldate = {2022-06-13},
	author = {Koponen, Ari-Pekka},
	month = dec,
	year = {2021},
	keywords = {notion},
}

@article{moe_overcoming_2010,
	title = {Overcoming {Barriers} to {Self}-{Management} in {Software} {Teams}},
	volume = {26},
	doi = {10.1109/MS.2009.182},
	abstract = {The basic work unit in innovative software organizations is the team rather than the individual. Such teams consist of "a small number of people with complementary skills who are committed to a common purpose, set of performance goals, and approach for which they hold themselves mutually accountable". Work teams have many advantages, such as increased productivity, innovation, and employee satisfaction. However, their implementation doesn't always result in organizational success. It isn't enough to put individuals together and expect that they'll automatically know how to work effectively as a team. Lack of redundancy and conflict between team and individual autonomy are key issues when transforming from traditional command-and-control management to collaborative self-managing teams.},
	journal = {Software, IEEE},
	author = {Moe, Nils and Dingsøyr, Torgeir and Dybå, Tore},
	month = jan,
	year = {2010},
	keywords = {notion},
	pages = {20--26},
}

@incollection{abrahamsson_exploring_2016,
	address = {Cham},
	title = {Exploring {Norms} in {Agile} {Software} {Teams}},
	volume = {10027},
	isbn = {978-3-319-49093-9 978-3-319-49094-6},
	url = {http://link.springer.com/10.1007/978-3-319-49094-6_31},
	abstract = {The majority of software developers work in teams and are thus inﬂuenced by team norms. Norms are shared expectations of how to behave and regulate the interaction between team members. Our aim of this study is to gain more knowledge about team norms in software teams and to increase the understanding of how norms inﬂuence teamwork in agile software development projects. We conducted a study of norms in four agile teams located in Norway and Malaysia. The analysis of 22 interviews revealed that we could extract a varied set of both injunctive and descriptive norms. Our results suggest that team norms have an important role in enabling team performance.},
	language = {en},
	urldate = {2022-06-13},
	booktitle = {Product-{Focused} {Software} {Process} {Improvement}},
	publisher = {Springer International Publishing},
	author = {Stray, Viktoria and Fægri, Tor Erlend and Moe, Nils Brede},
	editor = {Abrahamsson, Pekka and Jedlitschka, Andreas and Nguyen Duc, Anh and Felderer, Michael and Amasaki, Sousuke and Mikkonen, Tommi},
	year = {2016},
	doi = {10.1007/978-3-319-49094-6_31},
	note = {Series Title: Lecture Notes in Computer Science},
	keywords = {notion},
	pages = {458--467},
}

@book{forsgren_accelerate_2018,
	address = {Portland, Oregon},
	edition = {First edition},
	title = {Accelerate: the science behind {DevOps}: building and scaling high performing technology organizations},
	isbn = {978-1-942788-33-1},
	shorttitle = {Accelerate},
	abstract = {Accelerate your organization to win in the marketplace. How can we apply technology to drive business value? For years, we've been told that the performance of software delivery teams doesn't matter?that it can't provide a competitive advantage to our companies. Through four years of groundbreaking research to include data collected from the State of DevOps reports conducted with Puppet, Dr. Nicole Forsgren, Jez Humble, and Gene Kim set out to find a way to measure software delivery performance?and what drives it?using rigorous statistical methods. This book presents both the findings and the science behind that research, making the information accessible for readers to apply in their own organizations. Readers will discover how to measure the performance of their teams, and what capabilities they should invest in to drive higher performance. This book is ideal for management at every level--},
	language = {eng},
	publisher = {IT Revolution},
	author = {Forsgren, Nicole and Humble, Jez and Kim, Gene},
	year = {2018},
	keywords = {notion},
}

@misc{storey_how_2022,
	title = {How {Developers} and {Managers} {Define} and {Trade} {Productivity} for {Quality}},
	url = {http://arxiv.org/abs/2111.04302},
	doi = {10.1145/3528579.3529177},
	abstract = {Objective \& Method: Through an exploratory survey study with developers and managers at Microsoft, we investigated how these cohorts define productivity and quality, how aligned they are in their views, how aware they are of other views, and if and how they trade quality for productivity.
Results: We find developers and managers, as cohorts, are not well-aligned in their views of productivity—developers think more about work activities, while more managers consider performance or quality outcomes. We find developers and managers have more aligned views of what quality means, with the majority defining quality in terms of robustness, while the timely delivery of evolvable features that delight users are also key quality aspects. Over half of the developers and managers we surveyed make productivity and quality trade-offs but with good reasons for doing so.
Conclusion: Alignment on how developers and managers define productivity and quality is essential if they are to design effective improvement interventions and meaningful metrics to measure productivity and quality improvements. Our research provides a frame for developers and managers to align their views and to make informed decisions on productivity and quality trade-offs.},
	language = {en},
	urldate = {2022-06-09},
	author = {Storey, Margaret-Anne and Houck, Brian and Zimmermann, Thomas},
	month = apr,
	year = {2022},
	note = {arXiv:2111.04302 [cs]},
	keywords = {Computer Science - Software Engineering, notion},
}

@article{greiler_actionable_2022,
	title = {An {Actionable} {Framework} for {Understanding} and {Improving} {Developer} {Experience}},
	issn = {0098-5589, 1939-3520, 2326-3881},
	url = {https://ieeexplore.ieee.org/document/9785882/},
	doi = {10.1109/TSE.2022.3175660},
	abstract = {Developer experience is an important concern for software organizations, especially as teams shift to remote and hybrid work models. Enhanced developer experience improves productivity, satisfaction, engagement and retention. We set out to understand what affects developer experience through semi-structured interviews with developers from the industry, which we transcribed and iteratively coded. Our ﬁndings elucidate factors that affect developer experience and characteristics that inﬂuence their respective importance to individual developers. We also identify strategies employed by individuals and teams to improve developer experience and the barriers that stand in their way. Lastly, we describe the coping mechanisms of developers when developer experience cannot be sufﬁciently improved. Our ﬁndings result in the DX Framework, an actionable conceptual framework for understanding and improving developer experience. The DX Framework provides a go-to reference for organizations that want to enable more productive and effective work environments for their developers.},
	language = {en},
	urldate = {2022-06-06},
	journal = {IEEE Transactions on Software Engineering},
	author = {Greiler, Michaela and Storey, Margaret-Anne and Noda, Abi},
	year = {2022},
	keywords = {notion},
	pages = {1--1},
}

@article{forsgren_productivity_nodate,
	title = {Productivity {There}’s more to it than you think.},
	language = {en},
	author = {Forsgren, Nicole and Storey, Margaret-Anne and Maddila, Chandra and Zimmermann, Thomas and Houck, Brian and Butler, Jenna},
	pages = {29},
}

@article{forsgren_productivity_nodate-1,
	title = {Productivity {There}’s more to it than you think.},
	language = {en},
	author = {Forsgren, Nicole and Storey, Margaret-Anne and Maddila, Chandra and Zimmermann, Thomas and Houck, Brian and Butler, Jenna},
	pages = {29},
}

@book{noauthor_notitle_nodate,
}

@book{noauthor_notitle_nodate-1,
}
